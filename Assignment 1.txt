CREATE DATABASE SQL_PROJECT ;

USE DATABASE SQL_PROJECT;

------------------- TASK 1 ---------------------

-- CREATE TABLE SHOPPING HISTORY

CREATE OR REPLACE TABLE SHOPPING_HISTORY(
PRODUCT VARCHAR NOT NULL,
QUANTITY INTEGER NOT NULL,
UNIT_PRICE INTEGER NOT NULL);

-- INSERT DATA INTO THE TABLE

INSERT INTO SHOPPING_HISTORY VALUES ( 'MILK', 3, 10),
('BUTTER', 5, 4),
('BREAD', 8, 9),
('SUGAR', 3, 6),
('BUTTER', 4, 3),
('MILK', 6, 8),
('BREAD', 3, 9),
('SUGAR', 4, 7),
('BUTTER', 2, 4),
('MILK', 5, 7);

SELECT * FROM SHOPPING_HISTORY;

-- FIND THE TOTAL AMOUNT SPENT ON THE ITEMS

SELECT PRODUCT, SUM(QUANTITY*UNIT_PRICE) AS TOTAL_AMOUNT
    FROM SHOPPING_HISTORY
    GROUP BY PRODUCT 
    ORDER BY PRODUCT ;


----------------- TASK 2 ------------------------

-- CREATE TABLE PHONES AND CALLS 

CREATE OR REPLACE TABLE PHONES (
NAME VARCHAR(20) NOT NULL UNIQUE,
PHONE_NUMBER INTEGER NOT NULL UNIQUE
);

CREATE OR REPLACE TABLE CALLS (
ID INTEGER NOT NULL , 
CALLER INTEGER NOT NULL ,
CALLEE INTEGER NOT NULL, 
DURATION INTEGER NOT NULL, 
UNIQUE(ID)
);

 -- INSERT DATA INTO PHONES AND CALLS
 
INSERT INTO PHONES VALUES ('JACK', 1234),
('LENA', 3333),
('MARK', 9999),
('ANNA', 7582),
('JOHN', 6356),
('ADDISON', 4315),
('KATE', 8003),
('GINNY', 9831);

INSERT INTO CALLS VALUES (25,1234,7582,8),
(7,9999,7582,1),
(18,9999,3333,4),
(2,7582,3333,3),
(3,3333,1234,1),
(21,3333,1234,1),
(65,8003,9831,7),
(100,9831,8003,3),
(145,4315,9831,18);

SELECT * FROM CALLS;

---NAME OF CLIENTS WHO TALKED FOR AT LEAST 10 MIN IN TOTAL

SELECT P.NAME FROM PHONES P
JOIN CALLS C 
 ON  P.PHONE_NUMBER = C.CALLER OR P.PHONE_NUMBER = C.CALLEE
  GROUP BY P.NAME
  HAVING SUM(DURATION)>= 10;
  
  
----------------- TASK 3 ----------------

-- CREATE TABLE TRANSACTIONS

CREATE OR REPLACE TABLE TRANSACTIONS (
AMOUNT INTEGER NOT NULL,
DATE DATE NOT NULL
);

-- INSERT DATA INTO THE TABLE

INSERT INTO TRANSACTIONS VALUES 
(1000, '2020-01-06'),
(-10,'2020-01-14'),
(-75,'2020-01-20'),
(-5,'2020-01-25'),
(-4,'2020-01-29'),
(2000,'2020-03-10'),
(-75,'2020-03-12'),
(-20,'2020-03-15'),
(40,'2020-03-15'),
(-50,'2020-03-17'),
(200, '2020-10-10'),
(-200,'2020-10-10');


SELECT * FROM TRANSACTIONS;

-- WHAT IS THE TOTAL BALANCE AFTER CHARGES 
--- CHARGE IS 5 PER MONTH 
---- NO CHARGE IF PAYMENT IS MADE 3 TIMES IN A MONTH AND = > 100

SELECT (SUM(TOTAL) + SUM(CHARGES)) AS BALANCE FROM 
       (SELECT SUM (CASE WHEN AMOUNT < 0 THEN AMOUNT END) AS NEGATIVE ,
               SUM (CASE WHEN AMOUNT > 0 THEN AMOUNT END) AS POSITIVE ,
        MONTH(DATE) AS MONTHS, COUNT(MONTHS) AS COUNTS,
       (NEGATIVE + POSITIVE) AS TOTAL,
       (CASE WHEN  COUNTS >= 3 THEN 0 ELSE 1 END ) AS FLAG, 
       (CASE WHEN  NEGATIVE > -100 THEN 5 
             WHEN  FLAG = 1 THEN 5*FLAG
             END ) AS CHARGES
        FROM TRANSACTIONS GROUP BY MONTHS);